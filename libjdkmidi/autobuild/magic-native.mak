
ifeq ($(NATIVE_PLATFORM_MINGW32),1)
SUFFIXES_NATIVE_PLATFORM=MINGW32 WIN32
NATIVE_PLATFORM_GENERIC=0
NATIVE_EXE=.exe
RAW_NATIVE_PLATFORM_DIRS+=win32 mingw32
endif

ifeq ($(NATIVE_PLATFORM_CYGWIN),1)
SUFFIXES_NATIVE_PLATFORM=CYGWIN POSIX
NATIVE_PLATFORM_GENERIC=0
NATIVE_EXE=.exe
RAW_NATIVE_PLATFORM_DIRS+=cygwin posix
endif

ifeq ($(NATIVE_PLATFORM_POSIX),1)
SUFFIXES_NATIVE_PLATFORM=POSIX
NATIVE_PLATFORM_GENERIC=0
NATIVE_EXE=
RAW_NATIVE_PLATFORM_DIRS+=posix
endif

ifeq ($(NATIVE_PLATFORM_LINUX),1)
SUFFIXES_NATIVE_PLATFORM=POSIX LINUX
NATIVE_PLATFORM_GENERIC=0
NATIVE_EXE=
RAW_NATIVE_PLATFORM_DIRS+=posix linux
endif

ifeq ($(NATIVE_PLATFORM_LINUX_I386),1)
SUFFIXES_NATIVE_PLATFORM=POSIX LINUX LINUX_I386
NATIVE_PLATFORM_GENERIC=0
NATIVE_EXE=
RAW_NATIVE_PLATFORM_DIRS+=posix linux
endif

ifeq ($(NATIVE_PLATFORM_LINUX_X86_64),1)
SUFFIXES_NATIVE_PLATFORM=POSIX LINUX LINUX_I386 LINUX_X86_64
NATIVE_PLATFORM_GENERIC=0
NATIVE_EXE=
RAW_NATIVE_PLATFORM_DIRS+=posix linux
NATIVE_COMPILE_FLAGS+=-m64
NATIVE_LINK_FLAGS+=-m64
endif

ifeq ($(NATIVE_PLATFORM_LINUX_PPC),1)
SUFFIXES_NATIVE_PLATFORM=POSIX LINUX LINUX_PPC
NATIVE_PLATFORM_GENERIC=0
NATIVE_EXE=
RAW_NATIVE_PLATFORM_DIRS+=posix linux
endif

ifeq ($(NATIVE_PLATFORM_LINUX_PPC64),1)
SUFFIXES_NATIVE_PLATFORM=POSIX LINUX LINUX_PPC LINUX_PPC64
NATIVE_PLATFORM_GENERIC=0
NATIVE_EXE=
RAW_NATIVE_PLATFORM_DIRS+=posix linux
NATIVE_COMPILE_FLAGS+=-m64
NATIVE_LINK_FLAGS+=-m64
endif


# bsd is a subset of posix
ifeq ($(NATIVE_PLATFORM_BSD),1)
SUFFIXES_NATIVE_PLATFORM=POSIX BSD
RAW_NATIVE_PLATFORM_DIRS+=bsd posix
endif

# freebsd is a subset of posix and bsd
ifeq ($(NATIVE_PLATFORM_FREEBSD),1)
SUFFIXES_NATIVE_PLATFORM=POSIX BSD FREEBSD
RAW_NATIVE_PLATFORM_DIRS+=bsd posix freebsd
endif

# openbsd is a subset of posix and bsd
ifeq ($(NATIVE_PLATFORM_OPENBSD),1)
SUFFIXES_NATIVE_PLATFORM=POSIX BSD OPENBSD
RAW_NATIVE_PLATFORM_DIRS+=bsd posix openbsd
endif

# netbsd is a subset of posix and bsd
ifeq ($(NATIVE_PLATFORM_NETBSD),1)
SUFFIXES_NATIVE_PLATFORM=POSIX BSD NETBSD
RAW_NATIVE_PLATFORM_DIRS+=bsd posix netbsd
endif

# solaris is a subset of posix 
ifeq ($(NATIVE_PLATFORM_SOLARIS),1)
SUFFIXES_NATIVE_PLATFORM=POSIX SOLARIS
RAW_NATIVE_PLATFORM_DIRS+=solaris posix 
endif


ifeq ($(NATIVE_PLATFORM_MACOSX),1)
SUFFIXES_NATIVE_PLATFORM=POSIX MACOSX
NATIVE_PLATFORM_GENERIC=0
NATIVE_EXE=
RAW_NATIVE_PLATFORM_DIRS+=posix macosx
NATIVE_DISASM=otool
NATIVE_DISASM_FLAGS=-t -v -V
endif

ifeq ($(NATIVE_PLATFORM_MACOSX_PPC),1)
SUFFIXES_NATIVE_PLATFORM=POSIX MACOSX MACOSX_PPC
NATIVE_PLATFORM_GENERIC=0
NATIVE_EXE=
RAW_NATIVE_PLATFORM_DIRS+=posix macosx macosx-ppc
NATIVE_DISASM=otool
NATIVE_DISASM_FLAGS=-t -v -V
endif

ifeq ($(NATIVE_PLATFORM_MACOSX_PPC64),1)
SUFFIXES_NATIVE_PLATFORM=POSIX MACOSX MACOSX_PPC MACOSX_PPC64
NATIVE_PLATFORM_GENERIC=0
NATIVE_EXE=
RAW_NATIVE_PLATFORM_DIRS+=posix macosx macosx-ppc macosx-ppc64
NATIVE_DISASM=otool
NATIVE_DISASM_FLAGS=-t -v -V
endif

ifeq ($(NATIVE_PLATFORM_MACOSX_I386),1)
SUFFIXES_NATIVE_PLATFORM=POSIX MACOSX MACOSX_I386
NATIVE_PLATFORM_GENERIC=0
NATIVE_EXE=
RAW_NATIVE_PLATFORM_DIRS+=posix macosx macosx-i386
NATIVE_DISASM=otool
NATIVE_DISASM_FLAGS=-t -v -V
endif


ifeq ($(NATIVE_PLATFORM_MACOSX_X86_64),1)
SUFFIXES_NATIVE_PLATFORM=POSIX MACOSX MACOSX_I386 MACOSX_X86_64
NATIVE_PLATFORM_GENERIC=0
NATIVE_EXE=
RAW_NATIVE_PLATFORM_DIRS+=posix macosx macosx-i386 macosx-x86_64
NATIVE_DISASM=otool
NATIVE_DISASM_FLAGS=-t -v -V
endif

# macosx_universal is a subset of macosx and posix and uses mac libtool to generate fat binaries.
NATIVE_MACOSX_SDK?=/Developer/SDKs/MacOSX10.4u.sdk
ifeq ($(TARGET_PLATFORM_MACOSX_UNIVERSAL),1)
NATIVE_MACOSX_UNIVERSAL_ARCHS?=i386 ppc
NATIVE_MACOSX_UNIVERSAL_ARCHS_PARAMS=$(foreach a,$(NATIVE_MACOSX_UNIVERSAL_ARCHS),-arch $(a))
SUFFIXES_NATIVE_PLATFORM=POSIX MACOSX MACOSX_UNIVERSAL
NATIVE_EXE=
RAW_NATIVE_PLATFORM_DIRS+=posix macosx macosx-ppc macosx-i386
NATIVE_COMPILE_FLAGS+=-isysroot $(TARGET_MACOSX_SDK) $(NATIVE_MACOSX_UNIVERSAL_ARCHS)
NATIVE_LINK_FLAGS+=-isysroot $(TARGET_MACOSX_SDK) $(NATIVE_MACOSX_UNIVERSAL_ARCHS)
NATIVE_USE_AR=0
NATIVE_USE_MACOSX_LIBTOOL=1
NATIVE_MACOSX_LIBTOOL=libtool
NATIVE_MACOSX_LIBTOOLFLAGS?=-static
NATIVE_DISASM=otool
NATIVE_DISASM_FLAGS=-t -v -V
endif


# cell_spu 
ifeq ($(NATIVE_PLATFORM_CELL_SPU),1)
SUFFIXES_NATIVE_PLATFORM=CELL_SPU
RAW_NATIVE_PLATFORM_DIRS+=cell_spu
endif

# linux_cell_ppu is a subset of linux-ppc, linux, posix
ifeq ($(NATIVE_PLATFORM_LINUX_CELL_PPU),1)
SUFFIXES_NATIVE_PLATFORM=POSIX LINUX LINUX_PPC LINUX_CELL_PPU CELL_PPU
RAW_NATIVE_PLATFORM_DIRS+=posix linux cell_ppu
endif

# default to objdump for disassembly
NATIVE_DISASM_FLAGS?=-d -S
NATIVE_DISASM?=$(OBJDUMP)

$(eval $(call calc_multi_native_options,$(SUFFIXES_NATIVE_PLATFORM)))


# calculate our output directories for our native platform results
NATIVE_PLATFORM_DIRS=$(sort $(RAW_NATIVE_PLATFORM_DIRS))

NATIVE_OUTPUT_DIR=$(NATIVE_BUILD_DIR)/native
NATIVE_OUTPUT_LIB_DIR?=$(NATIVE_OUTPUT_DIR)/lib
NATIVE_OUTPUT_TESTS_DIR?=$(NATIVE_OUTPUT_DIR)/tests
NATIVE_OUTPUT_DOCS_DIR?=$(NATIVE_OUTPUT_DIR)/docs
NATIVE_OUTPUT_TOOLS_DIR?=$(NATIVE_OUTPUT_DIR)/tools
NATIVE_OUTPUT_EXAMPLES_DIR?=$(NATIVE_OUTPUT_DIR)/examples
NATIVE_OUTPUT_OBJ_DIR?=$(NATIVE_OUTPUT_DIR)/obj


NATIVE_LIB_SRC_DIR+=$(call native_suffix_platform_dirs,src) $(foreach i,$(SUBLIBS),$(call native_suffix_platform_dirs,src/$(i)))
NATIVE_LIB_TESTS_DIR+=$(call native_suffix_platform_dirs,tests) $(foreach i,$(SUBLIBS),$(call native_suffix_platform_dirs,tests/$(i)))
NATIVE_LIB_GUI_DIR+=$(call native_suffix_platform_dirs,gui) $(foreach i,$(SUBLIBS),$(call native_suffix_platform_dirs,gui/$(i)))
NATIVE_LIB_EXAMPLES_DIR+=$(call native_suffix_platform_dirs,examples) $(foreach i,$(SUBLIBS),$(call native_suffix_platform_dirs,examples/$(i)))
NATIVE_LIB_TOOLS_DIR+=$(call native_suffix_platform_dirs,tools) $(foreach i,$(SUBLIBS),$(call native_suffix_platform_dirs,tools/$(i)))
NATIVE_ALL_SOURCES_DIRS=$(strip $(NATIVE_LIB_SRC_DIR) $(NATIVE_LIB_TESTS_DIR) $(NATIVE_LIB_GUI_DIR) $(NATIVE_LIB_EXAMPLES_DIR) $(NATIVE_LIB_TOOLS_DIR))

NATIVE_ALL_OUTPUT_DIRS+=$(NATIVE_OUTPUT_LIB_DIR) $(NATIVE_OUTPUT_TOOLS_DIR) $(NATIVE_OUTPUT_TESTS_DIR) $(NATIVE_OUTPUT_DOCS_DIR) $(NATIVE_OUTPUT_EXAMPLES_DIR) $(NATIVE_OUTPUT_OBJ_DIR) 


